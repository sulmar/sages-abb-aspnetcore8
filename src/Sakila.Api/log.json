{
  "@t": "2024-02-29T15:11:54.3748804Z",
  "@mt": "Now listening on: {address}",
  "address": "https://localhost:7218",
  "EventId": {
    "Id": 14,
    "Name": "ListeningOnAddress"
  },
  "SourceContext": "Microsoft.Hosting.Lifetime"
} {
  "@t": "2024-02-29T15:11:54.4404871Z",
  "@mt": "Now listening on: {address}",
  "address": "http://localhost:5220",
  "EventId": {
    "Id": 14,
    "Name": "ListeningOnAddress"
  },
  "SourceContext": "Microsoft.Hosting.Lifetime"
} {
  "@t": "2024-02-29T15:11:54.4631940Z",
  "@mt": "No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts",
  "EventId": {
    "Id": 1,
    "Name": "NoActionDescriptors"
  },
  "SourceContext": "Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"
} {
  "@t": "2024-02-29T15:11:54.8731771Z",
  "@mt": "Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}",
  "@tr": "a39db277b16c67ec7217dc04e27d1afe",
  "@sp": "63a3d23b2d68529f",
  "Protocol": "HTTP/2",
  "Method": "GET",
  "ContentType": null,
  "ContentLength": null,
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/",
  "QueryString": "",
  "EventId": { "Id": 1 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1C:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1C"
} {
  "@t": "2024-02-29T15:11:55.0320367Z",
  "@mt": "Application started. Press Ctrl+C to shut down.",
  "SourceContext": "Microsoft.Hosting.Lifetime"
} {
  "@t": "2024-02-29T15:11:55.0337879Z",
  "@mt": "Hosting environment: {EnvName}",
  "EnvName": "Development",
  "SourceContext": "Microsoft.Hosting.Lifetime"
} {
  "@t": "2024-02-29T15:11:55.0352453Z",
  "@mt": "Content root path: {ContentRoot}",
  "ContentRoot": "C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api",
  "SourceContext": "Microsoft.Hosting.Lifetime"
} {
  "@t": "2024-02-29T15:11:55.0442278Z",
  "@mt": "{Method} {Path}",
  "@tr": "a39db277b16c67ec7217dc04e27d1afe",
  "@sp": "63a3d23b2d68529f",
  "Method": "GET",
  "Path": "/",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1C:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1C"
} {
  "@t": "2024-02-29T15:11:55.0462398Z",
  "@mt": "401",
  "@tr": "a39db277b16c67ec7217dc04e27d1afe",
  "@sp": "63a3d23b2d68529f",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1C:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1C"
} {
  "@t": "2024-02-29T15:11:55.0496916Z",
  "@mt": "Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms",
  "@tr": "a39db277b16c67ec7217dc04e27d1afe",
  "@sp": "63a3d23b2d68529f",
  "ElapsedMilliseconds": 186.812,
  "StatusCode": 401,
  "ContentType": null,
  "ContentLength": 0,
  "Protocol": "HTTP/2",
  "Method": "GET",
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/",
  "QueryString": "",
  "EventId": { "Id": 2 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1C:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1C"
} {
  "@t": "2024-02-29T15:11:59.9912071Z",
  "@mt": "Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "Protocol": "HTTP/1.1",
  "Method": "GET",
  "ContentType": null,
  "ContentLength": null,
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/",
  "QueryString": "",
  "EventId": { "Id": 1 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:11:59.9948968Z",
  "@mt": "{Method} {Path}",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "Method": "GET",
  "Path": "/",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0692678Z",
  "@mt": "Executing endpoint '{EndpointName}'",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "EndpointName": "HTTP: GET /",
  "EventId": { "Name": "ExecutingEndpoint" },
  "SourceContext": "Microsoft.AspNetCore.Routing.EndpointMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0820310Z",
  "@mt": "Executing RedirectResult, redirecting to {Destination}.",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "Destination": "/swagger",
  "EventId": {
    "Id": 1,
    "Name": "RedirectResultExecuting"
  },
  "SourceContext": "Microsoft.AspNetCore.Http.Result.RedirectResult",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0857278Z",
  "@mt": "Executed endpoint '{EndpointName}'",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "EndpointName": "HTTP: GET /",
  "EventId": {
    "Id": 1,
    "Name": "ExecutedEndpoint"
  },
  "SourceContext": "Microsoft.AspNetCore.Routing.EndpointMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0871230Z",
  "@mt": "302",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0902420Z",
  "@mt": "Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms",
  "@tr": "d534084f126041c928eb03fd368c6719",
  "@sp": "d6f9cdc50ab53e7c",
  "ElapsedMilliseconds": 99.1513,
  "StatusCode": 302,
  "ContentType": null,
  "ContentLength": 0,
  "Protocol": "HTTP/1.1",
  "Method": "GET",
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/",
  "QueryString": "",
  "EventId": { "Id": 2 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1E:00000001",
  "RequestPath": "/",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0952680Z",
  "@mt": "Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}",
  "@tr": "7c5f4934aa10f4a0baae3cc61e8fbe07",
  "@sp": "fddb8bbdb9279c79",
  "Protocol": "HTTP/1.1",
  "Method": "GET",
  "ContentType": null,
  "ContentLength": null,
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/swagger",
  "QueryString": "",
  "EventId": { "Id": 1 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1E:00000002",
  "RequestPath": "/swagger",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.0981120Z",
  "@mt": "{Method} {Path}",
  "@tr": "7c5f4934aa10f4a0baae3cc61e8fbe07",
  "@sp": "fddb8bbdb9279c79",
  "Method": "GET",
  "Path": "/swagger",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000002",
  "RequestPath": "/swagger",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.1009845Z",
  "@mt": "301",
  "@tr": "7c5f4934aa10f4a0baae3cc61e8fbe07",
  "@sp": "fddb8bbdb9279c79",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000002",
  "RequestPath": "/swagger",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.1031656Z",
  "@mt": "Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms",
  "@tr": "7c5f4934aa10f4a0baae3cc61e8fbe07",
  "@sp": "fddb8bbdb9279c79",
  "ElapsedMilliseconds": 7.8775,
  "StatusCode": 301,
  "ContentType": null,
  "ContentLength": 0,
  "Protocol": "HTTP/1.1",
  "Method": "GET",
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/swagger",
  "QueryString": "",
  "EventId": { "Id": 2 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1E:00000002",
  "RequestPath": "/swagger",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.1110965Z",
  "@mt": "Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}",
  "@tr": "348da21e294eafe1d41ed96f6cf0ce6e",
  "@sp": "f1a74060b141bfe3",
  "Protocol": "HTTP/1.1",
  "Method": "GET",
  "ContentType": null,
  "ContentLength": null,
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/swagger/index.html",
  "QueryString": "",
  "EventId": { "Id": 1 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1E:00000003",
  "RequestPath": "/swagger/index.html",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.1146308Z",
  "@mt": "{Method} {Path}",
  "@tr": "348da21e294eafe1d41ed96f6cf0ce6e",
  "@sp": "f1a74060b141bfe3",
  "Method": "GET",
  "Path": "/swagger/index.html",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000003",
  "RequestPath": "/swagger/index.html",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.1530275Z",
  "@mt": "200",
  "@tr": "348da21e294eafe1d41ed96f6cf0ce6e",
  "@sp": "f1a74060b141bfe3",
  "SourceContext": "Sakila.Api.Middlewares.LoggerMiddleware",
  "RequestId": "0HN1P731QMQ1E:00000003",
  "RequestPath": "/swagger/index.html",
  "ConnectionId": "0HN1P731QMQ1E"
} {
  "@t": "2024-02-29T15:12:00.1569454Z",
  "@mt": "Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms",
  "@tr": "348da21e294eafe1d41ed96f6cf0ce6e",
  "@sp": "f1a74060b141bfe3",
  "ElapsedMilliseconds": 45.7153,
  "StatusCode": 200,
  "ContentType": "text/html;charset=utf-8",
  "ContentLength": null,
  "Protocol": "HTTP/1.1",
  "Method": "GET",
  "Scheme": "https",
  "Host": "localhost:7218",
  "PathBase": "",
  "Path": "/swagger/index.html",
  "QueryString": "",
  "EventId": { "Id": 2 },
  "SourceContext": "Microsoft.AspNetCore.Hosting.Diagnostics",
  "RequestId": "0HN1P731QMQ1E:00000003",
  "RequestPath": "/swagger/index.html",
  "ConnectionId": "0HN1P731QMQ1E"
}
{"@t":"2024-02-29T15:37:23.1830221Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:37:23.2178080Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:37:23.2316048Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T15:37:23.5145221Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:37:23.5175182Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:37:23.5197726Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:37:23.9474556Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"8de1ed484fd6d20fa49ead6e529f1310","@sp":"80b6c0268f99b8b8","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7H9IIJO5:00000001","RequestPath":"/","ConnectionId":"0HN1P7H9IIJO5"}
{"@t":"2024-02-29T15:37:24.0490950Z","@mt":"{Method} {Path}","@tr":"8de1ed484fd6d20fa49ead6e529f1310","@sp":"80b6c0268f99b8b8","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7H9IIJO5:00000001","RequestPath":"/","ConnectionId":"0HN1P7H9IIJO5"}
{"@t":"2024-02-29T15:37:24.0516668Z","@mt":"401","@tr":"8de1ed484fd6d20fa49ead6e529f1310","@sp":"80b6c0268f99b8b8","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7H9IIJO5:00000001","RequestPath":"/","ConnectionId":"0HN1P7H9IIJO5"}
{"@t":"2024-02-29T15:37:24.0552611Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"8de1ed484fd6d20fa49ead6e529f1310","@sp":"80b6c0268f99b8b8","ElapsedMilliseconds":113.8432,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7H9IIJO5:00000001","RequestPath":"/","ConnectionId":"0HN1P7H9IIJO5"}
{"@t":"2024-02-29T15:37:56.4715234Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/api/customers","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:37:56.4776198Z","@mt":"{Method} {Path}","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","Method":"GET","Path":"/api/customers","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:37:56.5499556Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","EndpointName":"HTTP: GET api/customers/","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:37:57.4627211Z","@mt":"The property '{property}' on entity type '{entityType}' is of type 'byte', but is set up to use a SQL Server identity column; this requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@l":"Warning","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","property":"CategoryId","entityType":"Category","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:37:57.4709705Z","@mt":"The property '{property}' on entity type '{entityType}' is of type 'byte', but is set up to use a SQL Server identity column; this requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@l":"Warning","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","property":"LanguageId","entityType":"Language","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:37:57.4780078Z","@mt":"The property '{property}' on entity type '{entityType}' is of type 'byte', but is set up to use a SQL Server identity column; this requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@l":"Warning","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","property":"StaffId","entityType":"Staff","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:38:08.2188139Z","@mt":"An error occurred using the connection to database '{database}' on server '{server}'.","@l":"Error","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","database":"sakilaXXX","server":"(local)","EventId":{"Id":20004,"Name":"Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Connection","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:38:08.3286495Z","@mt":"An exception occurred while iterating over the results of a query for context type '{contextType}'.{newline}{error}","@l":"Error","@x":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\nClientConnectionId:61e6f40b-712f-4cef-a5fb-d57991758c79\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","contextType":"Sakila.Intrastructure.SakilaContext","newline":"\r\n","error":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\nClientConnectionId:61e6f40b-712f-4cef-a5fb-d57991758c79\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:38:08.5534092Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","EndpointName":"HTTP: GET api/customers/","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:38:08.7043632Z","@mt":"An unhandled exception has occurred while executing the request.","@l":"Error","@x":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\nClientConnectionId:61e6f40b-712f-4cef-a5fb-d57991758c79\r\nError Number:4060,State:1,Class:11\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Sakila.Infrastructure.DbCustomerRepository.GetAllAsync() in C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Infrastructure\\DbCustomerRepository.cs:line 11\r\n   at Sakila.Api.Endpoints.CustomersEndpoints.<>c.<<MapCustomersApi>b__0_0>d.MoveNext() in C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api\\Endpoints\\CustomersEndpoints.cs:line 11\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<ExecuteTaskOfT>g__ExecuteAwaited|133_0[T](Task`1 task, HttpContext httpContext, JsonTypeInfo`1 jsonTypeInfo)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Sakila.Api.Middlewares.AuthorizeMiddleware.InvokeAsync(HttpContext context) in C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api\\Middlewares\\AuthorizeMiddlare.cs:line 15\r\n   at Sakila.Api.Middlewares.LoggerMiddleware.InvokeAsync(HttpContext context) in C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api\\Middlewares\\LoggerMiddleware.cs:line 29\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:38:08.8134581Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"b2348ab75e30763a6eef4d06c7933c46","@sp":"97ae3f0ea8f3bfa2","ElapsedMilliseconds":12342.0196,"StatusCode":500,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/api/customers","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7H9IIJO7:00000001","RequestPath":"/api/customers","ConnectionId":"0HN1P7H9IIJO7"}
{"@t":"2024-02-29T15:43:48.3183378Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:43:48.3747885Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:43:48.3942463Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T15:43:48.6138394Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:43:48.6159627Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:43:48.6178272Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:43:49.1449967Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"92a59f0f865b7c723ce056fdec2833d7","@sp":"5dce27f369901dba","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7KSC4UUK:00000001","RequestPath":"/","ConnectionId":"0HN1P7KSC4UUK"}
{"@t":"2024-02-29T15:43:49.2641216Z","@mt":"{Method} {Path}","@tr":"92a59f0f865b7c723ce056fdec2833d7","@sp":"5dce27f369901dba","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7KSC4UUK:00000001","RequestPath":"/","ConnectionId":"0HN1P7KSC4UUK"}
{"@t":"2024-02-29T15:43:49.2673202Z","@mt":"401","@tr":"92a59f0f865b7c723ce056fdec2833d7","@sp":"5dce27f369901dba","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7KSC4UUK:00000001","RequestPath":"/","ConnectionId":"0HN1P7KSC4UUK"}
{"@t":"2024-02-29T15:43:49.2717023Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"92a59f0f865b7c723ce056fdec2833d7","@sp":"5dce27f369901dba","ElapsedMilliseconds":132.9697,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7KSC4UUK:00000001","RequestPath":"/","ConnectionId":"0HN1P7KSC4UUK"}
{"@t":"2024-02-29T15:43:59.1105717Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"7ba5edb9f6a2aeebd85a63c514e3b487","@sp":"ffc03b210cecbfb0","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7KSC4UUM:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7KSC4UUM"}
{"@t":"2024-02-29T15:43:59.1160380Z","@mt":"{Method} {Path}","@tr":"7ba5edb9f6a2aeebd85a63c514e3b487","@sp":"ffc03b210cecbfb0","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7KSC4UUM:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7KSC4UUM"}
{"@t":"2024-02-29T15:43:59.1911151Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"7ba5edb9f6a2aeebd85a63c514e3b487","@sp":"ffc03b210cecbfb0","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7KSC4UUM:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7KSC4UUM"}
{"@t":"2024-02-29T15:43:59.2092140Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"7ba5edb9f6a2aeebd85a63c514e3b487","@sp":"ffc03b210cecbfb0","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7KSC4UUM:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7KSC4UUM"}
{"@t":"2024-02-29T15:43:59.2128620Z","@mt":"200","@tr":"7ba5edb9f6a2aeebd85a63c514e3b487","@sp":"ffc03b210cecbfb0","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7KSC4UUM:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7KSC4UUM"}
{"@t":"2024-02-29T15:43:59.2149234Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"7ba5edb9f6a2aeebd85a63c514e3b487","@sp":"ffc03b210cecbfb0","ElapsedMilliseconds":104.5041,"StatusCode":200,"ContentType":"text/plain","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7KSC4UUM:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7KSC4UUM"}
{"@t":"2024-02-29T15:54:39.3860980Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:54:39.4126428Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:54:39.4242112Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T15:54:39.8495542Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:54:39.8523125Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:54:39.8511918Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"a6d34f0332d69d582632eccb2b53932e","@sp":"ab074f58b3209e54","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJH:00000001","RequestPath":"/","ConnectionId":"0HN1P7QU99EJH"}
{"@t":"2024-02-29T15:54:39.8536508Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T15:54:39.9606219Z","@mt":"{Method} {Path}","@tr":"a6d34f0332d69d582632eccb2b53932e","@sp":"ab074f58b3209e54","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJH:00000001","RequestPath":"/","ConnectionId":"0HN1P7QU99EJH"}
{"@t":"2024-02-29T15:54:39.9643460Z","@mt":"401","@tr":"a6d34f0332d69d582632eccb2b53932e","@sp":"ab074f58b3209e54","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJH:00000001","RequestPath":"/","ConnectionId":"0HN1P7QU99EJH"}
{"@t":"2024-02-29T15:54:39.9694605Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"a6d34f0332d69d582632eccb2b53932e","@sp":"ab074f58b3209e54","ElapsedMilliseconds":125.0603,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJH:00000001","RequestPath":"/","ConnectionId":"0HN1P7QU99EJH"}
{"@t":"2024-02-29T15:54:56.5497131Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d8cb7b555c53b32ae00904d4f082f396","@sp":"81bf5cfd467e12ee","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:54:56.5550482Z","@mt":"{Method} {Path}","@tr":"d8cb7b555c53b32ae00904d4f082f396","@sp":"81bf5cfd467e12ee","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:54:56.6271307Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d8cb7b555c53b32ae00904d4f082f396","@sp":"81bf5cfd467e12ee","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:54:56.6449073Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d8cb7b555c53b32ae00904d4f082f396","@sp":"81bf5cfd467e12ee","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:54:56.6478926Z","@mt":"200","@tr":"d8cb7b555c53b32ae00904d4f082f396","@sp":"81bf5cfd467e12ee","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:54:56.6510433Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d8cb7b555c53b32ae00904d4f082f396","@sp":"81bf5cfd467e12ee","ElapsedMilliseconds":101.5146,"StatusCode":200,"ContentType":"text/plain","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4646354Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4690226Z","@mt":"{Method} {Path}","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4750185Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4848918Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.1157,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4908295Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4932819Z","@mt":"503","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:55:03.4970839Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"24892746fe1847fbcc0fd023e2e972d6","@sp":"272c09bb57f6836f","ElapsedMilliseconds":32.5927,"StatusCode":503,"ContentType":"text/plain","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:56:11.4004309Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"673c5123e976b019a4de1e82559063a7","@sp":"1a0c534857f82851","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:56:11.4083003Z","@mt":"{Method} {Path}","@tr":"673c5123e976b019a4de1e82559063a7","@sp":"1a0c534857f82851","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:56:11.4109867Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"673c5123e976b019a4de1e82559063a7","@sp":"1a0c534857f82851","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:56:11.4162179Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"673c5123e976b019a4de1e82559063a7","@sp":"1a0c534857f82851","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:56:11.4260003Z","@mt":"200","@tr":"673c5123e976b019a4de1e82559063a7","@sp":"1a0c534857f82851","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:56:11.4291533Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"673c5123e976b019a4de1e82559063a7","@sp":"1a0c534857f82851","ElapsedMilliseconds":28.8207,"StatusCode":200,"ContentType":"text/plain","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9035075Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9162870Z","@mt":"{Method} {Path}","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9177343Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9226520Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.166,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9338983Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9364467Z","@mt":"503","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T15:59:28.9401058Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"5c6e44c76f7d1b9bbab2a009a2859711","@sp":"d09bdc7396365975","ElapsedMilliseconds":36.7648,"StatusCode":503,"ContentType":"text/plain","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7QU99EJJ:00000004","RequestPath":"/hc","ConnectionId":"0HN1P7QU99EJJ"}
{"@t":"2024-02-29T16:02:55.4307648Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:02:55.4843178Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:02:55.5028449Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T16:02:55.7527031Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:02:55.7549270Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:02:55.7573745Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:02:56.0856082Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"849bf182c98c6490ef6322a9a4e49854","@sp":"7c1dfc2482de4703","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIS:00000001","RequestPath":"/","ConnectionId":"0HN1P7VI69OIS"}
{"@t":"2024-02-29T16:02:56.1991791Z","@mt":"{Method} {Path}","@tr":"849bf182c98c6490ef6322a9a4e49854","@sp":"7c1dfc2482de4703","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIS:00000001","RequestPath":"/","ConnectionId":"0HN1P7VI69OIS"}
{"@t":"2024-02-29T16:02:56.2021051Z","@mt":"401","@tr":"849bf182c98c6490ef6322a9a4e49854","@sp":"7c1dfc2482de4703","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIS:00000001","RequestPath":"/","ConnectionId":"0HN1P7VI69OIS"}
{"@t":"2024-02-29T16:02:56.2056381Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"849bf182c98c6490ef6322a9a4e49854","@sp":"7c1dfc2482de4703","ElapsedMilliseconds":125.0977,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIS:00000001","RequestPath":"/","ConnectionId":"0HN1P7VI69OIS"}
{"@t":"2024-02-29T16:03:01.0711301Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:01.0781663Z","@mt":"{Method} {Path}","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:01.1573140Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:01.1726961Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":1.4528,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:01.2461841Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:01.2519477Z","@mt":"503","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:01.2575291Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"a75fde008a96f576a2e25e9803562c30","@sp":"8a62c5d2be4b4e34","ElapsedMilliseconds":186.4639,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIU:00000001","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5360689Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5398793Z","@mt":"{Method} {Path}","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5439333Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5464582Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0536,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5522161Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5552203Z","@mt":"503","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:24.5572232Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"e2da7e15fb84e7bf34608eebb3cff24e","@sp":"2017dba3e748827e","ElapsedMilliseconds":21.0527,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIU:00000002","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4602151Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4648167Z","@mt":"{Method} {Path}","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4667149Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4687408Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.1207,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4743535Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4789918Z","@mt":"503","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:03:25.4825614Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"4f708b6704f377fe9c12706b7fa46b02","@sp":"a81b2bd558d1a641","ElapsedMilliseconds":22.3882,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P7VI69OIU:00000003","RequestPath":"/hc","ConnectionId":"0HN1P7VI69OIU"}
{"@t":"2024-02-29T16:06:50.9778245Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:06:51.0297639Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:06:51.0445180Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T16:06:51.3511638Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:06:51.3539651Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:06:51.3562816Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:06:51.8037984Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"c6d57d218b573616d9883831e154a6ec","@sp":"fbfeba4df0f8045b","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P81ODHV2G:00000001","RequestPath":"/","ConnectionId":"0HN1P81ODHV2G"}
{"@t":"2024-02-29T16:06:51.9226425Z","@mt":"{Method} {Path}","@tr":"c6d57d218b573616d9883831e154a6ec","@sp":"fbfeba4df0f8045b","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P81ODHV2G:00000001","RequestPath":"/","ConnectionId":"0HN1P81ODHV2G"}
{"@t":"2024-02-29T16:06:51.9259163Z","@mt":"401","@tr":"c6d57d218b573616d9883831e154a6ec","@sp":"fbfeba4df0f8045b","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P81ODHV2G:00000001","RequestPath":"/","ConnectionId":"0HN1P81ODHV2G"}
{"@t":"2024-02-29T16:06:51.9320843Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"c6d57d218b573616d9883831e154a6ec","@sp":"fbfeba4df0f8045b","ElapsedMilliseconds":134.8594,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P81ODHV2G:00000001","RequestPath":"/","ConnectionId":"0HN1P81ODHV2G"}
{"@t":"2024-02-29T16:06:56.3860834Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"6298f5ab5c0865192f4e0a5efe19aa33","@sp":"4bd910e899a567c9","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P81ODHV2I:00000001","RequestPath":"/hc","ConnectionId":"0HN1P81ODHV2I"}
{"@t":"2024-02-29T16:06:56.3925681Z","@mt":"{Method} {Path}","@tr":"6298f5ab5c0865192f4e0a5efe19aa33","@sp":"4bd910e899a567c9","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P81ODHV2I:00000001","RequestPath":"/hc","ConnectionId":"0HN1P81ODHV2I"}
{"@t":"2024-02-29T16:06:56.4707760Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"6298f5ab5c0865192f4e0a5efe19aa33","@sp":"4bd910e899a567c9","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P81ODHV2I:00000001","RequestPath":"/hc","ConnectionId":"0HN1P81ODHV2I"}
{"@t":"2024-02-29T16:06:56.9237787Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"6298f5ab5c0865192f4e0a5efe19aa33","@sp":"4bd910e899a567c9","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P81ODHV2I:00000001","RequestPath":"/hc","ConnectionId":"0HN1P81ODHV2I"}
{"@t":"2024-02-29T16:06:56.9276444Z","@mt":"200","@tr":"6298f5ab5c0865192f4e0a5efe19aa33","@sp":"4bd910e899a567c9","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P81ODHV2I:00000001","RequestPath":"/hc","ConnectionId":"0HN1P81ODHV2I"}
{"@t":"2024-02-29T16:06:56.9300416Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"6298f5ab5c0865192f4e0a5efe19aa33","@sp":"4bd910e899a567c9","ElapsedMilliseconds":544.1611,"StatusCode":200,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P81ODHV2I:00000001","RequestPath":"/hc","ConnectionId":"0HN1P81ODHV2I"}
{"@t":"2024-02-29T16:07:18.8722099Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:07:18.9294518Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:07:18.9452268Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T16:07:19.2183152Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:07:19.2205490Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:07:19.2224282Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:07:19.5811242Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"111150ebc93f1314fa6b0f2a22367ef4","@sp":"eba843b31a38545d","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P820LCVC1:00000001","RequestPath":"/","ConnectionId":"0HN1P820LCVC1"}
{"@t":"2024-02-29T16:07:19.7514662Z","@mt":"{Method} {Path}","@tr":"111150ebc93f1314fa6b0f2a22367ef4","@sp":"eba843b31a38545d","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P820LCVC1:00000001","RequestPath":"/","ConnectionId":"0HN1P820LCVC1"}
{"@t":"2024-02-29T16:07:19.7551815Z","@mt":"401","@tr":"111150ebc93f1314fa6b0f2a22367ef4","@sp":"eba843b31a38545d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P820LCVC1:00000001","RequestPath":"/","ConnectionId":"0HN1P820LCVC1"}
{"@t":"2024-02-29T16:07:19.7633842Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"111150ebc93f1314fa6b0f2a22367ef4","@sp":"eba843b31a38545d","ElapsedMilliseconds":191.3248,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P820LCVC1:00000001","RequestPath":"/","ConnectionId":"0HN1P820LCVC1"}
{"@t":"2024-02-29T16:07:22.5654255Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:22.5706290Z","@mt":"{Method} {Path}","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:22.6510356Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:22.6773704Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":3.4206,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:33.0674441Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:6c72cd2e-4757-4cc9-a5d5-34c1df70bbff\r\nError Number:4060,State:1,Class:11","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10399.263,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:33.2324847Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:33.2385943Z","@mt":"503","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:07:33.2426133Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"98dc52bc7dfb84daf690ded64ee047f8","@sp":"81d6ad1f555f2fae","ElapsedMilliseconds":10677.1974,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"http","Host":"localhost:5220","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P820LCVC3:00000001","RequestPath":"/hc","ConnectionId":"0HN1P820LCVC3"}
{"@t":"2024-02-29T16:12:49.9851440Z","@mt":"Initializing UI Database","SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService"}
{"@t":"2024-02-29T16:12:50.9567862Z","@mt":"Saving healthchecks configuration to database","SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService"}
{"@t":"2024-02-29T16:12:51.0576185Z","@mt":"Saved {count} entities to in-memory store.","count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update"}
{"@t":"2024-02-29T16:12:51.2930339Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:12:51.2960487Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:12:51.3042086Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T16:12:52.0079330Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"fc0a415905bdc9f7aed414e49ba0e64a","@sp":"a084c4532d793f35","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N40:00000001","RequestPath":"/","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:52.2205322Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:12:52.2325709Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:12:52.2498926Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:12:52.2521379Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:12:52.2535100Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:12:52.2565122Z","@mt":"{Method} {Path}","@tr":"fc0a415905bdc9f7aed414e49ba0e64a","@sp":"a084c4532d793f35","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N40:00000001","RequestPath":"/","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:52.2601230Z","@mt":"401","@tr":"fc0a415905bdc9f7aed414e49ba0e64a","@sp":"a084c4532d793f35","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N40:00000001","RequestPath":"/","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:52.2628998Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"1a719d61d7b59ca77be966281f6adca5","@sp":"f80c56f61987d950","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N41:00000001","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:12:52.2646119Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"fc0a415905bdc9f7aed414e49ba0e64a","@sp":"a084c4532d793f35","ElapsedMilliseconds":261.2546,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N40:00000001","RequestPath":"/","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:52.2711815Z","@mt":"{Method} {Path}","@tr":"1a719d61d7b59ca77be966281f6adca5","@sp":"f80c56f61987d950","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N41:00000001","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:12:52.2810252Z","@mt":"401","@tr":"1a719d61d7b59ca77be966281f6adca5","@sp":"f80c56f61987d950","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N41:00000001","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:12:52.2882453Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"1a719d61d7b59ca77be966281f6adca5","@sp":"f80c56f61987d950","ElapsedMilliseconds":25.1711,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N41:00000001","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:12:52.3009461Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":57.5624,"StatusCode":401,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:12:52.3052577Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":97.2204,"StatusCode":401,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:12:52.4663041Z","@mt":"Saved {count} entities to in-memory store.","count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:12:52.5803250Z","@mt":"Saved {count} entities to in-memory store.","count":2,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:12:58.0570900Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"448d7900709d8b630aecef8e890293e2","@sp":"68a0bf4fe77f0635","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N40:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:58.0687545Z","@mt":"{Method} {Path}","@tr":"448d7900709d8b630aecef8e890293e2","@sp":"68a0bf4fe77f0635","Method":"GET","Path":"/swagger/index.html","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N40:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:58.0736930Z","@mt":"401","@tr":"448d7900709d8b630aecef8e890293e2","@sp":"68a0bf4fe77f0635","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N40:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:58.0760542Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"448d7900709d8b630aecef8e890293e2","@sp":"68a0bf4fe77f0635","ElapsedMilliseconds":19.391,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N40:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:59.8476832Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"26b61aa5ee8356de6dd9da3fb72fc999","@sp":"d7097d068036b144","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/dashboard","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N40:00000005","RequestPath":"/dashboard","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:59.8546977Z","@mt":"{Method} {Path}","@tr":"26b61aa5ee8356de6dd9da3fb72fc999","@sp":"d7097d068036b144","Method":"GET","Path":"/dashboard","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N40:00000005","RequestPath":"/dashboard","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:59.8570872Z","@mt":"401","@tr":"26b61aa5ee8356de6dd9da3fb72fc999","@sp":"d7097d068036b144","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N40:00000005","RequestPath":"/dashboard","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:12:59.8589001Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"26b61aa5ee8356de6dd9da3fb72fc999","@sp":"d7097d068036b144","ElapsedMilliseconds":11.3072,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/dashboard","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N40:00000005","RequestPath":"/dashboard","ConnectionId":"0HN1P853O1N40"}
{"@t":"2024-02-29T16:13:02.6422681Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:02.6488742Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:02.6555417Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"ebd04f3fc13edd5183366363a62588e9","@sp":"9e75ab8318c4e2be","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N41:00000002","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:13:02.6588185Z","@mt":"{Method} {Path}","@tr":"ebd04f3fc13edd5183366363a62588e9","@sp":"9e75ab8318c4e2be","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N41:00000002","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:13:02.6603674Z","@mt":"401","@tr":"ebd04f3fc13edd5183366363a62588e9","@sp":"9e75ab8318c4e2be","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P853O1N41:00000002","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:13:02.6633763Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"ebd04f3fc13edd5183366363a62588e9","@sp":"9e75ab8318c4e2be","ElapsedMilliseconds":7.8069,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P853O1N41:00000002","RequestPath":"/hc","ConnectionId":"0HN1P853O1N41"}
{"@t":"2024-02-29T16:13:02.6635883Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10.5564,"StatusCode":401,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:02.6709502Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":28.7023,"StatusCode":401,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:02.6789330Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:13:02.6955179Z","@mt":"Saved {count} entities to in-memory store.","count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:13:31.4366350Z","@mt":"Initializing UI Database","SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService"}
{"@t":"2024-02-29T16:13:32.3597179Z","@mt":"Saving healthchecks configuration to database","SourceContext":"HealthChecks.UI.Core.HostedService.UIInitializationHostedService"}
{"@t":"2024-02-29T16:13:32.4674734Z","@mt":"Saved {count} entities to in-memory store.","count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update"}
{"@t":"2024-02-29T16:13:32.6990746Z","@mt":"Now listening on: {address}","address":"https://localhost:7218","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:13:32.7021547Z","@mt":"Now listening on: {address}","address":"http://localhost:5220","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:13:32.7132395Z","@mt":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}
{"@t":"2024-02-29T16:13:33.0032588Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:33.0101456Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:33.1064780Z","@mt":"Application started. Press Ctrl+C to shut down.","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:13:33.1212594Z","@mt":"Hosting environment: {EnvName}","EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:13:33.1235605Z","@mt":"Content root path: {ContentRoot}","ContentRoot":"C:\\Users\\marci\\Projects\\sages-abb-aspnetcore8\\src\\Sakila.Api","SourceContext":"Microsoft.Hosting.Lifetime"}
{"@t":"2024-02-29T16:13:33.2176556Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:33.2625772Z","@mt":"{Method} {Path}","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:33.3499849Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.3938375Z","@mt":"{Method} {Path}","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","Method":"GET","Path":"/","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4271430Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4271435Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:33.4376769Z","@mt":"Executing RedirectResult, redirecting to {Destination}.","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","Destination":"/swagger","EventId":{"Id":1,"Name":"RedirectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Http.Result.RedirectResult","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4394639Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4450709Z","@mt":"302","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4509226Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":1.6409,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:33.4532629Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"f3545346a12f0ce699310e56fff7dca6","@sp":"aa784d69e7532ffd","ElapsedMilliseconds":103.4134,"StatusCode":302,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000001","RequestPath":"/","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4612632Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d2b1ce62b2b1ebddf05a42418020de63","@sp":"d5f6ff83b0b8d3a0","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.4902903Z","@mt":"{Method} {Path}","@tr":"d2b1ce62b2b1ebddf05a42418020de63","@sp":"d5f6ff83b0b8d3a0","Method":"GET","Path":"/swagger/index.html","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.6189870Z","@mt":"200","@tr":"d2b1ce62b2b1ebddf05a42418020de63","@sp":"d5f6ff83b0b8d3a0","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.6209327Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d2b1ce62b2b1ebddf05a42418020de63","@sp":"d5f6ff83b0b8d3a0","ElapsedMilliseconds":159.7454,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000003","RequestPath":"/swagger/index.html","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.6273948Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"dfe8023461ce505485bf2fbad969fbb2","@sp":"dc0507c24d1156ed","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000005","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.6300333Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"47977cd3ff8c476502fabc9aa5416c3c","@sp":"77b0fae2fe8491c4","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000007","RequestPath":"/_vs/browserLink","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.6482158Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"dfe8023461ce505485bf2fbad969fbb2","@sp":"dc0507c24d1156ed","ElapsedMilliseconds":21.295,"StatusCode":200,"ContentType":"application/javascript; charset=utf-8","ContentLength":13756,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000005","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.7321611Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"47977cd3ff8c476502fabc9aa5416c3c","@sp":"77b0fae2fe8491c4","ElapsedMilliseconds":102.3495,"StatusCode":200,"ContentType":"text/javascript; charset=UTF-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000007","RequestPath":"/_vs/browserLink","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.8221100Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"c2582caf17019f7a3d827f038e3640f3","@sp":"d83d17d2935d5112","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000009","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.8260323Z","@mt":"{Method} {Path}","@tr":"c2582caf17019f7a3d827f038e3640f3","@sp":"d83d17d2935d5112","Method":"GET","Path":"/swagger/v1/swagger.json","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000009","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.9336621Z","@mt":"200","@tr":"c2582caf17019f7a3d827f038e3640f3","@sp":"d83d17d2935d5112","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000009","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:33.9355098Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"c2582caf17019f7a3d827f038e3640f3","@sp":"d83d17d2935d5112","ElapsedMilliseconds":113.7131,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000009","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0556193Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"b5867604aed6e1cd657293513ffd60f6","@sp":"2de73d3d3e89cac0","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/dashboard","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000000B","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0652357Z","@mt":"{Method} {Path}","@tr":"b5867604aed6e1cd657293513ffd60f6","@sp":"2de73d3d3e89cac0","Method":"GET","Path":"/dashboard","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000000B","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0684420Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"b5867604aed6e1cd657293513ffd60f6","@sp":"2de73d3d3e89cac0","EndpointName":"HTTP: GET /dashboard","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000000B","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0726132Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"b5867604aed6e1cd657293513ffd60f6","@sp":"2de73d3d3e89cac0","EndpointName":"HTTP: GET /dashboard","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000000B","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0766148Z","@mt":"200","@tr":"b5867604aed6e1cd657293513ffd60f6","@sp":"2de73d3d3e89cac0","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000000B","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0789768Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"b5867604aed6e1cd657293513ffd60f6","@sp":"2de73d3d3e89cac0","ElapsedMilliseconds":23.8906,"StatusCode":200,"ContentType":"text/html","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/dashboard","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000000B","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0901945Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"1fefc60c556f9d6cac4b686570ab0ec4","@sp":"8168356d1d7c6b42","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecksui-min.css","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000000D","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0913766Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d8b4ff8b6e256844d68c9de9ad55e7e9","@sp":"2be1d9a94035d7ae","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecks-bundle.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000011","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0913518Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"55bf84016ece1ef47290bcd66f96dbd1","@sp":"deee66c960e99a8e","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/vendors-dll.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000000F","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0920062Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"e12abfa3dfedc9074069af94a9504748","@sp":"6ecb30816a2db0bb","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000013","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0927816Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"5fe294a8e16922ecf694a6e5049eaa3a","@sp":"7d0bbde8d8571201","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000015","RequestPath":"/_vs/browserLink","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1087599Z","@mt":"{Method} {Path}","@tr":"d8b4ff8b6e256844d68c9de9ad55e7e9","@sp":"2be1d9a94035d7ae","Method":"GET","Path":"/ui/resources/healthchecks-bundle.js","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000011","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.0984694Z","@mt":"{Method} {Path}","@tr":"1fefc60c556f9d6cac4b686570ab0ec4","@sp":"8168356d1d7c6b42","Method":"GET","Path":"/ui/resources/healthchecksui-min.css","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000000D","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1341751Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d8b4ff8b6e256844d68c9de9ad55e7e9","@sp":"2be1d9a94035d7ae","EndpointName":"HTTP: GET /ui/resources/healthchecks-bundle.js","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000011","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1385499Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"1fefc60c556f9d6cac4b686570ab0ec4","@sp":"8168356d1d7c6b42","EndpointName":"HTTP: GET /ui/resources/healthchecksui-min.css","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000000D","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1139870Z","@mt":"{Method} {Path}","@tr":"55bf84016ece1ef47290bcd66f96dbd1","@sp":"deee66c960e99a8e","Method":"GET","Path":"/ui/resources/vendors-dll.js","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000000F","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1195107Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"e12abfa3dfedc9074069af94a9504748","@sp":"6ecb30816a2db0bb","ElapsedMilliseconds":27.9227,"StatusCode":200,"ContentType":"application/javascript; charset=utf-8","ContentLength":13756,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000013","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1628675Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"55bf84016ece1ef47290bcd66f96dbd1","@sp":"deee66c960e99a8e","EndpointName":"HTTP: GET /ui/resources/vendors-dll.js","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000000F","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1738380Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d8b4ff8b6e256844d68c9de9ad55e7e9","@sp":"2be1d9a94035d7ae","EndpointName":"HTTP: GET /ui/resources/healthchecks-bundle.js","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000011","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1738379Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"1fefc60c556f9d6cac4b686570ab0ec4","@sp":"8168356d1d7c6b42","EndpointName":"HTTP: GET /ui/resources/healthchecksui-min.css","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000000D","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1784496Z","@mt":"200","@tr":"d8b4ff8b6e256844d68c9de9ad55e7e9","@sp":"2be1d9a94035d7ae","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000011","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1816723Z","@mt":"200","@tr":"1fefc60c556f9d6cac4b686570ab0ec4","@sp":"8168356d1d7c6b42","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000000D","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1835744Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"55bf84016ece1ef47290bcd66f96dbd1","@sp":"deee66c960e99a8e","EndpointName":"HTTP: GET /ui/resources/vendors-dll.js","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000000F","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1838851Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d8b4ff8b6e256844d68c9de9ad55e7e9","@sp":"2be1d9a94035d7ae","ElapsedMilliseconds":92.4938,"StatusCode":200,"ContentType":"text/javascript","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecks-bundle.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000011","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1865755Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"1fefc60c556f9d6cac4b686570ab0ec4","@sp":"8168356d1d7c6b42","ElapsedMilliseconds":96.6165,"StatusCode":200,"ContentType":"text/css","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecksui-min.css","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000000D","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1872695Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"5fe294a8e16922ecf694a6e5049eaa3a","@sp":"7d0bbde8d8571201","ElapsedMilliseconds":94.6917,"StatusCode":200,"ContentType":"text/javascript; charset=UTF-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000015","RequestPath":"/_vs/browserLink","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.1925132Z","@mt":"200","@tr":"55bf84016ece1ef47290bcd66f96dbd1","@sp":"deee66c960e99a8e","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000000F","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2149246Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"55bf84016ece1ef47290bcd66f96dbd1","@sp":"deee66c960e99a8e","ElapsedMilliseconds":123.6047,"StatusCode":200,"ContentType":"text/javascript","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/vendors-dll.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000000F","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2656389Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"3579ce742065102315877573fb9e31e7","@sp":"96e52fc680b64c60","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api/ui-settings","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000017","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2735435Z","@mt":"{Method} {Path}","@tr":"3579ce742065102315877573fb9e31e7","@sp":"96e52fc680b64c60","Method":"GET","Path":"/healthchecks-api/ui-settings","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000017","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2769935Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"3579ce742065102315877573fb9e31e7","@sp":"96e52fc680b64c60","EndpointName":"/healthchecks-api/ui-settings","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000017","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2901093Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"3579ce742065102315877573fb9e31e7","@sp":"96e52fc680b64c60","EndpointName":"/healthchecks-api/ui-settings","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000017","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2932178Z","@mt":"200","@tr":"3579ce742065102315877573fb9e31e7","@sp":"96e52fc680b64c60","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000017","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.2961602Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"3579ce742065102315877573fb9e31e7","@sp":"96e52fc680b64c60","ElapsedMilliseconds":31.3584,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api/ui-settings","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000017","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3171882Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"ca67229d6c09c1dcb7a610b8bc948a33","@sp":"8c71a8343a411ff1","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000019","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3240122Z","@mt":"{Method} {Path}","@tr":"ca67229d6c09c1dcb7a610b8bc948a33","@sp":"8c71a8343a411ff1","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000019","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3267412Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"ca67229d6c09c1dcb7a610b8bc948a33","@sp":"8c71a8343a411ff1","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000019","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3439294Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"3b310ae0bf8b59b3baef204322674685","@sp":"c142900913de3b5d","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001B","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3511297Z","@mt":"{Method} {Path}","@tr":"3b310ae0bf8b59b3baef204322674685","@sp":"c142900913de3b5d","Method":"GET","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000001B","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3574694Z","@mt":"404","@tr":"3b310ae0bf8b59b3baef204322674685","@sp":"c142900913de3b5d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000001B","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3598699Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"3b310ae0bf8b59b3baef204322674685","@sp":"c142900913de3b5d","ElapsedMilliseconds":16.5278,"StatusCode":404,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001B","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.3713882Z","@mt":"Request reached the end of the middleware pipeline without being handled by application code. Request path: {Method} {Scheme}://{Host}{PathBase}{Path}, Response status code: {StatusCode}","@tr":"3b310ae0bf8b59b3baef204322674685","@sp":"c142900913de3b5d","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","StatusCode":404,"EventId":{"Id":16},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001B","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.5017938Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"ca67229d6c09c1dcb7a610b8bc948a33","@sp":"8c71a8343a411ff1","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000019","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.5043504Z","@mt":"200","@tr":"ca67229d6c09c1dcb7a610b8bc948a33","@sp":"8c71a8343a411ff1","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000019","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:38.5065059Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"ca67229d6c09c1dcb7a610b8bc948a33","@sp":"8c71a8343a411ff1","ElapsedMilliseconds":190.2175,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000019","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:43.8881992Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3851a589-ceb2-4d95-82ad-d806fcfaa92b\r\nError Number:4060,State:1,Class:11","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10447.3989,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:43.9877269Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:43.9917326Z","@mt":"503","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:43.9929122Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10977.4545,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:43.9940691Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"c5bd23f99b4cdfa8850471a5cda62863","@sp":"78ebfcf9ddc0487f","ElapsedMilliseconds":10784.5957,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:43.9981630Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":11001.1416,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:44.0738947Z","@mt":"Saved {count} entities to in-memory store.","count":1,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:13:44.1565430Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:13:47.4950534Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"81c5ecf892b90368019b03aa1d78d37f","@sp":"31e0f20a3f47d83d","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/dashboard","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001D","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5050838Z","@mt":"{Method} {Path}","@tr":"81c5ecf892b90368019b03aa1d78d37f","@sp":"31e0f20a3f47d83d","Method":"GET","Path":"/dashboard","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000001D","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5077779Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"81c5ecf892b90368019b03aa1d78d37f","@sp":"31e0f20a3f47d83d","EndpointName":"HTTP: GET /dashboard","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000001D","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5092383Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"81c5ecf892b90368019b03aa1d78d37f","@sp":"31e0f20a3f47d83d","EndpointName":"HTTP: GET /dashboard","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000001D","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5109436Z","@mt":"200","@tr":"81c5ecf892b90368019b03aa1d78d37f","@sp":"31e0f20a3f47d83d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000001D","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5141744Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"81c5ecf892b90368019b03aa1d78d37f","@sp":"31e0f20a3f47d83d","ElapsedMilliseconds":19.9237,"StatusCode":200,"ContentType":"text/html","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/dashboard","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001D","RequestPath":"/dashboard","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5300013Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"008f7e273627ad47bc6e0cc21266aa72","@sp":"a6de689643ec1042","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecksui-min.css","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001F","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5322076Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"eb5a679d0d3fd2439c3707b289cda16c","@sp":"26d2e0f950faf9dc","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000021","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5331662Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"c6883db21ed869f7921412a56b19b4d6","@sp":"49ec79bc39962f07","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecks-bundle.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000025","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5378228Z","@mt":"{Method} {Path}","@tr":"008f7e273627ad47bc6e0cc21266aa72","@sp":"a6de689643ec1042","Method":"GET","Path":"/ui/resources/healthchecksui-min.css","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000001F","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5331985Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"cb3fb5d535b958afc0f0f75e1e4ff42c","@sp":"e801e22210f6a172","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000027","RequestPath":"/_vs/browserLink","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5331730Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"6f9ef22d81465fe987fba29f45f305b4","@sp":"284a4f35043011de","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/vendors-dll.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000023","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5499285Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"008f7e273627ad47bc6e0cc21266aa72","@sp":"a6de689643ec1042","EndpointName":"HTTP: GET /ui/resources/healthchecksui-min.css","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000001F","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5443652Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"eb5a679d0d3fd2439c3707b289cda16c","@sp":"26d2e0f950faf9dc","ElapsedMilliseconds":12.6818,"StatusCode":200,"ContentType":"application/javascript; charset=utf-8","ContentLength":13756,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000021","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5685771Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"cb3fb5d535b958afc0f0f75e1e4ff42c","@sp":"e801e22210f6a172","ElapsedMilliseconds":36.0413,"StatusCode":200,"ContentType":"text/javascript; charset=UTF-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000027","RequestPath":"/_vs/browserLink","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5485021Z","@mt":"{Method} {Path}","@tr":"c6883db21ed869f7921412a56b19b4d6","@sp":"49ec79bc39962f07","Method":"GET","Path":"/ui/resources/healthchecks-bundle.js","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000025","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5678467Z","@mt":"{Method} {Path}","@tr":"6f9ef22d81465fe987fba29f45f305b4","@sp":"284a4f35043011de","Method":"GET","Path":"/ui/resources/vendors-dll.js","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000023","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5720737Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"008f7e273627ad47bc6e0cc21266aa72","@sp":"a6de689643ec1042","EndpointName":"HTTP: GET /ui/resources/healthchecksui-min.css","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000001F","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5928990Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"c6883db21ed869f7921412a56b19b4d6","@sp":"49ec79bc39962f07","EndpointName":"HTTP: GET /ui/resources/healthchecks-bundle.js","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000025","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5948313Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"6f9ef22d81465fe987fba29f45f305b4","@sp":"284a4f35043011de","EndpointName":"HTTP: GET /ui/resources/vendors-dll.js","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000023","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.5965935Z","@mt":"200","@tr":"008f7e273627ad47bc6e0cc21266aa72","@sp":"a6de689643ec1042","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000001F","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6057199Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"c6883db21ed869f7921412a56b19b4d6","@sp":"49ec79bc39962f07","EndpointName":"HTTP: GET /ui/resources/healthchecks-bundle.js","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000025","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6090647Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"008f7e273627ad47bc6e0cc21266aa72","@sp":"a6de689643ec1042","ElapsedMilliseconds":79.6012,"StatusCode":200,"ContentType":"text/css","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecksui-min.css","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000001F","RequestPath":"/ui/resources/healthchecksui-min.css","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6114134Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"6f9ef22d81465fe987fba29f45f305b4","@sp":"284a4f35043011de","EndpointName":"HTTP: GET /ui/resources/vendors-dll.js","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000023","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6117691Z","@mt":"200","@tr":"c6883db21ed869f7921412a56b19b4d6","@sp":"49ec79bc39962f07","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000025","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6227911Z","@mt":"200","@tr":"6f9ef22d81465fe987fba29f45f305b4","@sp":"284a4f35043011de","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000023","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6246294Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"c6883db21ed869f7921412a56b19b4d6","@sp":"49ec79bc39962f07","ElapsedMilliseconds":92.1413,"StatusCode":200,"ContentType":"text/javascript","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/healthchecks-bundle.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000025","RequestPath":"/ui/resources/healthchecks-bundle.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6265164Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"6f9ef22d81465fe987fba29f45f305b4","@sp":"284a4f35043011de","ElapsedMilliseconds":93.9482,"StatusCode":200,"ContentType":"text/javascript","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/vendors-dll.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000023","RequestPath":"/ui/resources/vendors-dll.js","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6503558Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"851c8667a52eb3e9b18b20d99bf0b04f","@sp":"69646e699177a6af","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api/ui-settings","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000029","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6581972Z","@mt":"{Method} {Path}","@tr":"851c8667a52eb3e9b18b20d99bf0b04f","@sp":"69646e699177a6af","Method":"GET","Path":"/healthchecks-api/ui-settings","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000029","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6621643Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"851c8667a52eb3e9b18b20d99bf0b04f","@sp":"69646e699177a6af","EndpointName":"/healthchecks-api/ui-settings","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000029","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6666863Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"851c8667a52eb3e9b18b20d99bf0b04f","@sp":"69646e699177a6af","EndpointName":"/healthchecks-api/ui-settings","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000029","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6705735Z","@mt":"200","@tr":"851c8667a52eb3e9b18b20d99bf0b04f","@sp":"69646e699177a6af","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000029","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6720176Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"851c8667a52eb3e9b18b20d99bf0b04f","@sp":"69646e699177a6af","ElapsedMilliseconds":22.0821,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api/ui-settings","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000029","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6766897Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"ea6a7018c9e38e01367fff9ecef9e77c","@sp":"06a645568ceeab6b","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6846271Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"3599899408e1d520041f43bac56187c1","@sp":"edfb1fc23b549e92","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002D","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6860401Z","@mt":"{Method} {Path}","@tr":"ea6a7018c9e38e01367fff9ecef9e77c","@sp":"06a645568ceeab6b","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000002B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6932312Z","@mt":"{Method} {Path}","@tr":"3599899408e1d520041f43bac56187c1","@sp":"edfb1fc23b549e92","Method":"GET","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000002D","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.6953563Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"ea6a7018c9e38e01367fff9ecef9e77c","@sp":"06a645568ceeab6b","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000002B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.7005770Z","@mt":"404","@tr":"3599899408e1d520041f43bac56187c1","@sp":"edfb1fc23b549e92","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000002D","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.7064552Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"3599899408e1d520041f43bac56187c1","@sp":"edfb1fc23b549e92","ElapsedMilliseconds":22.1716,"StatusCode":404,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002D","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.7109602Z","@mt":"Request reached the end of the middleware pipeline without being handled by application code. Request path: {Method} {Scheme}://{Host}{PathBase}{Path}, Response status code: {StatusCode}","@tr":"3599899408e1d520041f43bac56187c1","@sp":"edfb1fc23b549e92","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","StatusCode":404,"EventId":{"Id":16},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002D","RequestPath":"/ui/resources/1ae4e3706fe3f478fcc1.woff2","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.7295621Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"ea6a7018c9e38e01367fff9ecef9e77c","@sp":"06a645568ceeab6b","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000002B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.7330505Z","@mt":"200","@tr":"ea6a7018c9e38e01367fff9ecef9e77c","@sp":"06a645568ceeab6b","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000002B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:47.7377041Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"ea6a7018c9e38e01367fff9ecef9e77c","@sp":"06a645568ceeab6b","ElapsedMilliseconds":61.4361,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:54.1706652Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:54.1758193Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:13:54.1803147Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:54.1854994Z","@mt":"{Method} {Path}","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:54.1881180Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:54.1903005Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0388,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:13:57.7412064Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"95c7ce6404632894aed10f0ac022c6ba","@sp":"b21e114fa52b8a5e","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:57.7484408Z","@mt":"{Method} {Path}","@tr":"95c7ce6404632894aed10f0ac022c6ba","@sp":"b21e114fa52b8a5e","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000002F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:57.7500987Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"95c7ce6404632894aed10f0ac022c6ba","@sp":"b21e114fa52b8a5e","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000002F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:57.7530458Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"95c7ce6404632894aed10f0ac022c6ba","@sp":"b21e114fa52b8a5e","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000002F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:57.7553508Z","@mt":"200","@tr":"95c7ce6404632894aed10f0ac022c6ba","@sp":"b21e114fa52b8a5e","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000002F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:13:57.7571461Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"95c7ce6404632894aed10f0ac022c6ba","@sp":"b21e114fa52b8a5e","ElapsedMilliseconds":15.7826,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000002F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:04.2239452Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:ab4156f8-3061-422f-8ede-ea195171ca9c\r\nError Number:4060,State:1,Class:11","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10033.8486,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:04.2579778Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:04.2588784Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10080.5863,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:04.2640254Z","@mt":"503","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:04.2661937Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10095.5731,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:04.2675332Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d2cfaf73cc07cc9a50a675989325c7c4","@sp":"f5cd9c52e3634208","ElapsedMilliseconds":10087.2477,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:04.2717344Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:04.2865515Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:07.7726914Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"87409cb62189922f8b953501061de3c9","@sp":"d60acdc0c8716ab5","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000031","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:07.7783087Z","@mt":"{Method} {Path}","@tr":"87409cb62189922f8b953501061de3c9","@sp":"d60acdc0c8716ab5","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000031","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:07.7799352Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"87409cb62189922f8b953501061de3c9","@sp":"d60acdc0c8716ab5","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000031","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:07.7831469Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"87409cb62189922f8b953501061de3c9","@sp":"d60acdc0c8716ab5","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000031","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:07.7866223Z","@mt":"200","@tr":"87409cb62189922f8b953501061de3c9","@sp":"d60acdc0c8716ab5","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000031","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:07.7880415Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"87409cb62189922f8b953501061de3c9","@sp":"d60acdc0c8716ab5","ElapsedMilliseconds":16.1224,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000031","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:14.3053184Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:14.3111860Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:14.3155703Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:14.3206253Z","@mt":"{Method} {Path}","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:14.3220862Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:17.7931938Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"faa2ae169845a1f3d2e66d76dfc3d208","@sp":"497f7d2de02d400f","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000033","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:17.7990328Z","@mt":"{Method} {Path}","@tr":"faa2ae169845a1f3d2e66d76dfc3d208","@sp":"497f7d2de02d400f","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000033","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:17.8018831Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"faa2ae169845a1f3d2e66d76dfc3d208","@sp":"497f7d2de02d400f","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000033","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:17.8054575Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"faa2ae169845a1f3d2e66d76dfc3d208","@sp":"497f7d2de02d400f","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000033","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:17.8083178Z","@mt":"200","@tr":"faa2ae169845a1f3d2e66d76dfc3d208","@sp":"497f7d2de02d400f","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000033","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:17.8097930Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"faa2ae169845a1f3d2e66d76dfc3d208","@sp":"497f7d2de02d400f","ElapsedMilliseconds":16.9153,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000033","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:24.3631242Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:b0e5b380-994b-4226-b610-48bd52dd748a\r\nError Number:4060,State:1,Class:11","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10038.7439,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:24.3958560Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:24.3963185Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10082.2039,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:24.4010502Z","@mt":"503","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:24.4035261Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10098.2334,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:24.4055922Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"1cbfeafacefb7e919c775c0e58e42bb9","@sp":"a0b17253f1c7da0c","ElapsedMilliseconds":10090.2716,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:24.4079075Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:24.4161722Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:27.8296526Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"5bb70ac1004bb06a200d1956eaf7bfb3","@sp":"ccb1dc7b678beef1","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000035","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:27.8350626Z","@mt":"{Method} {Path}","@tr":"5bb70ac1004bb06a200d1956eaf7bfb3","@sp":"ccb1dc7b678beef1","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000035","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:27.8370867Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"5bb70ac1004bb06a200d1956eaf7bfb3","@sp":"ccb1dc7b678beef1","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000035","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:27.8406624Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"5bb70ac1004bb06a200d1956eaf7bfb3","@sp":"ccb1dc7b678beef1","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000035","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:27.8450658Z","@mt":"200","@tr":"5bb70ac1004bb06a200d1956eaf7bfb3","@sp":"ccb1dc7b678beef1","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000035","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:27.8468130Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"5bb70ac1004bb06a200d1956eaf7bfb3","@sp":"ccb1dc7b678beef1","ElapsedMilliseconds":17.6445,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000035","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:34.4308586Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:34.4347769Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:34.4426249Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4471994Z","@mt":"{Method} {Path}","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4487668Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4531531Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:b0e5b380-994b-4226-b610-48bd52dd748a\r\nError Number:4060,State:1,Class:11","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.6459,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4726005Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4729245Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":31.8415,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:34.4744850Z","@mt":"503","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4768428Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":46.046,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:34.4801913Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"a36b04ca954019de3c1bb170c63d81eb","@sp":"d70986305f1cd73a","ElapsedMilliseconds":38.2252,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:34.4826113Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:34.4883067Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:37.8666241Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"03602eb15ff8f19e30b2741e0cccda17","@sp":"0a28be3f188684e9","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000037","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:37.8763578Z","@mt":"{Method} {Path}","@tr":"03602eb15ff8f19e30b2741e0cccda17","@sp":"0a28be3f188684e9","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000037","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:37.8781076Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"03602eb15ff8f19e30b2741e0cccda17","@sp":"0a28be3f188684e9","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000037","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:37.8834169Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"03602eb15ff8f19e30b2741e0cccda17","@sp":"0a28be3f188684e9","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000037","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:37.8860748Z","@mt":"200","@tr":"03602eb15ff8f19e30b2741e0cccda17","@sp":"0a28be3f188684e9","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000037","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:37.8881103Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"03602eb15ff8f19e30b2741e0cccda17","@sp":"0a28be3f188684e9","ElapsedMilliseconds":21.8999,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000037","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:44.4999903Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:44.5037088Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:44.5082449Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:44.5132445Z","@mt":"{Method} {Path}","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:44.5171826Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:47.9074007Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d7ee56685d6cf261ac3a99e6c1e94c76","@sp":"693e25504eab99e8","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000039","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:47.9131976Z","@mt":"{Method} {Path}","@tr":"d7ee56685d6cf261ac3a99e6c1e94c76","@sp":"693e25504eab99e8","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000039","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:47.9159435Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d7ee56685d6cf261ac3a99e6c1e94c76","@sp":"693e25504eab99e8","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000039","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:47.9193134Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d7ee56685d6cf261ac3a99e6c1e94c76","@sp":"693e25504eab99e8","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000039","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:47.9240337Z","@mt":"200","@tr":"d7ee56685d6cf261ac3a99e6c1e94c76","@sp":"693e25504eab99e8","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000039","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:47.9259942Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d7ee56685d6cf261ac3a99e6c1e94c76","@sp":"693e25504eab99e8","ElapsedMilliseconds":19.0394,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000039","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:54.5584624Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:64eeed8a-0748-4233-9ffc-82b78e5a6152\r\nError Number:4060,State:1,Class:11","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10038.3434,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:54.5911528Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:54.5913966Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10085.3457,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:54.5936672Z","@mt":"503","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:54.5970107Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10097.0025,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:14:54.5992648Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"fafaa3d2a842cf563b04d57f1cdabc81","@sp":"bb9c275cbcbd49b6","ElapsedMilliseconds":10091.6489,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:14:54.6020303Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:54.6126817Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:14:57.9365749Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"ab8ba2deeb1134c7cc1c49579527d604","@sp":"2e1b0fdb81afcf37","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000003B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:57.9430524Z","@mt":"{Method} {Path}","@tr":"ab8ba2deeb1134c7cc1c49579527d604","@sp":"2e1b0fdb81afcf37","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000003B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:57.9461945Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"ab8ba2deeb1134c7cc1c49579527d604","@sp":"2e1b0fdb81afcf37","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000003B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:57.9500725Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"ab8ba2deeb1134c7cc1c49579527d604","@sp":"2e1b0fdb81afcf37","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000003B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:57.9528656Z","@mt":"200","@tr":"ab8ba2deeb1134c7cc1c49579527d604","@sp":"2e1b0fdb81afcf37","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000003B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:14:57.9543401Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"ab8ba2deeb1134c7cc1c49579527d604","@sp":"2e1b0fdb81afcf37","ElapsedMilliseconds":18.4032,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000003B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:04.6165514Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:04.6200020Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:04.6261963Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6301819Z","@mt":"{Method} {Path}","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6344548Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6367260Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0079,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6388922Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:64eeed8a-0748-4233-9ffc-82b78e5a6152\r\nError Number:4060,State:1,Class:11","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.4759,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6622720Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6625481Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":38.329,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:04.6683594Z","@mt":"503","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6713278Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.7758,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:04.6738823Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"292def26d526dbe18606936c8093ee7f","@sp":"3aa270fb5916d302","ElapsedMilliseconds":48.8226,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:04.6777990Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:04.6859795Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:07.9590035Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"b30aa09b66048a00736cc55961d7117f","@sp":"ae5f3074037a2e95","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000003D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:07.9650824Z","@mt":"{Method} {Path}","@tr":"b30aa09b66048a00736cc55961d7117f","@sp":"ae5f3074037a2e95","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000003D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:07.9680718Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"b30aa09b66048a00736cc55961d7117f","@sp":"ae5f3074037a2e95","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000003D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:07.9715754Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"b30aa09b66048a00736cc55961d7117f","@sp":"ae5f3074037a2e95","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000003D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:07.9753079Z","@mt":"200","@tr":"b30aa09b66048a00736cc55961d7117f","@sp":"ae5f3074037a2e95","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000003D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:07.9779533Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"b30aa09b66048a00736cc55961d7117f","@sp":"ae5f3074037a2e95","ElapsedMilliseconds":19.7538,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000003D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:14.7025037Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:14.7059243Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:14.7096446Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7139496Z","@mt":"{Method} {Path}","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7159377Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7205142Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.1323,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7219506Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:64eeed8a-0748-4233-9ffc-82b78e5a6152\r\nError Number:4060,State:1,Class:11","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.2252,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7482152Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7485542Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":40.4087,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:14.7540271Z","@mt":"503","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7568530Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":54.3432,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:14.7586713Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"fd01153a918388f24471cde4f6761256","@sp":"a2ccdda45cdf8e7d","ElapsedMilliseconds":49.5209,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:14.7608326Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:14.7697805Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:17.9931236Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"3b6444e321672e177596bbb3ccc84539","@sp":"de5d47e2fff1d769","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000003F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:18.0015886Z","@mt":"{Method} {Path}","@tr":"3b6444e321672e177596bbb3ccc84539","@sp":"de5d47e2fff1d769","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000003F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:18.0052790Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"3b6444e321672e177596bbb3ccc84539","@sp":"de5d47e2fff1d769","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000003F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:18.0122353Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"3b6444e321672e177596bbb3ccc84539","@sp":"de5d47e2fff1d769","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000003F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:18.0159236Z","@mt":"200","@tr":"3b6444e321672e177596bbb3ccc84539","@sp":"de5d47e2fff1d769","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000003F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:18.0177118Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"3b6444e321672e177596bbb3ccc84539","@sp":"de5d47e2fff1d769","ElapsedMilliseconds":25.2969,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000003F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:24.7845317Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:24.7905656Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:24.7938773Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.7982644Z","@mt":"{Method} {Path}","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8023800Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8058419Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.127,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8076307Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:64eeed8a-0748-4233-9ffc-82b78e5a6152\r\nError Number:4060,State:1,Class:11","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.277,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8298849Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8301315Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":37.1197,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:24.8342039Z","@mt":"503","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8358737Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.3591,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:24.8372979Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"e11581b4a5c05132994c2e6625233557","@sp":"f26a602ddb7b0462","ElapsedMilliseconds":43.6838,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC7:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC7"}
{"@t":"2024-02-29T16:15:24.8394220Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:24.8482782Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:28.0330807Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"68135892f9db8444599a070bae759d6b","@sp":"fff9dec9edeb8920","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000041","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:28.0394999Z","@mt":"{Method} {Path}","@tr":"68135892f9db8444599a070bae759d6b","@sp":"fff9dec9edeb8920","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000041","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:28.0409316Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"68135892f9db8444599a070bae759d6b","@sp":"fff9dec9edeb8920","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000041","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:28.0430677Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"68135892f9db8444599a070bae759d6b","@sp":"fff9dec9edeb8920","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000041","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:28.0476867Z","@mt":"200","@tr":"68135892f9db8444599a070bae759d6b","@sp":"fff9dec9edeb8920","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000041","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:28.0502665Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"68135892f9db8444599a070bae759d6b","@sp":"fff9dec9edeb8920","ElapsedMilliseconds":17.4652,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000041","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:34.8632611Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:34.8656711Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:34.8790400Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:34.8832016Z","@mt":"{Method} {Path}","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:34.8848582Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:34.8868948Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0083,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:38.0643707Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d28338f976efcdd1f12e8a94bd214d95","@sp":"953b6202266deb9d","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000043","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:38.0700375Z","@mt":"{Method} {Path}","@tr":"d28338f976efcdd1f12e8a94bd214d95","@sp":"953b6202266deb9d","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000043","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:38.0716340Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d28338f976efcdd1f12e8a94bd214d95","@sp":"953b6202266deb9d","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000043","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:38.0741915Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d28338f976efcdd1f12e8a94bd214d95","@sp":"953b6202266deb9d","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000043","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:38.0768553Z","@mt":"200","@tr":"d28338f976efcdd1f12e8a94bd214d95","@sp":"953b6202266deb9d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000043","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:38.0801833Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d28338f976efcdd1f12e8a94bd214d95","@sp":"953b6202266deb9d","ElapsedMilliseconds":16.1931,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000043","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:44.9230263Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:e750229f-8f79-45a3-9f38-dc10db1cf9de\r\nError Number:4060,State:1,Class:11","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10036.2948,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:44.9623544Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:44.9626374Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10094.4097,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:44.9654881Z","@mt":"503","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:44.9680369Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10104.7975,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:44.9702291Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d28483ba30d19d51d377cce0c03a3f4f","@sp":"6518ff2b75a24fec","ElapsedMilliseconds":10091.1288,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:44.9739716Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:44.9813399Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:48.0897165Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"f5a5861b53bddecf9e0e93fc07b842ab","@sp":"a732622639a4cf16","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000045","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:48.0965159Z","@mt":"{Method} {Path}","@tr":"f5a5861b53bddecf9e0e93fc07b842ab","@sp":"a732622639a4cf16","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000045","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:48.0979945Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"f5a5861b53bddecf9e0e93fc07b842ab","@sp":"a732622639a4cf16","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000045","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:48.1007079Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"f5a5861b53bddecf9e0e93fc07b842ab","@sp":"a732622639a4cf16","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000045","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:48.1025145Z","@mt":"200","@tr":"f5a5861b53bddecf9e0e93fc07b842ab","@sp":"a732622639a4cf16","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000045","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:48.1038358Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"f5a5861b53bddecf9e0e93fc07b842ab","@sp":"a732622639a4cf16","ElapsedMilliseconds":14.1776,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000045","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:54.9967698Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:55.0013279Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:55.0054595Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0095331Z","@mt":"{Method} {Path}","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0114323Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0151705Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0083,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0169600Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:e750229f-8f79-45a3-9f38-dc10db1cf9de\r\nError Number:4060,State:1,Class:11","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.0869,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0408783Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0412001Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":37.4051,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:55.0431767Z","@mt":"503","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0467358Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":49.9681,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:15:55.0485114Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"eb42e7a204829c9eb9cab95a8baacdf9","@sp":"86553576fd1fb5b4","ElapsedMilliseconds":43.7388,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:15:55.0517985Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:55.0597166Z","@mt":"Saved {count} entities to in-memory store.","count":3,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:15:58.1099682Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"59f2111af5c0c289a17f11a84abc77c6","@sp":"98cee10abada31ba","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000047","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:58.1167226Z","@mt":"{Method} {Path}","@tr":"59f2111af5c0c289a17f11a84abc77c6","@sp":"98cee10abada31ba","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000047","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:58.1181340Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"59f2111af5c0c289a17f11a84abc77c6","@sp":"98cee10abada31ba","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000047","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:58.1203350Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"59f2111af5c0c289a17f11a84abc77c6","@sp":"98cee10abada31ba","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000047","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:58.1251965Z","@mt":"200","@tr":"59f2111af5c0c289a17f11a84abc77c6","@sp":"98cee10abada31ba","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000047","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:15:58.1276023Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"59f2111af5c0c289a17f11a84abc77c6","@sp":"98cee10abada31ba","ElapsedMilliseconds":17.9936,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000047","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:05.0717207Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:05.0778105Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:05.0809406Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.0859015Z","@mt":"{Method} {Path}","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.0901724Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.0947365Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:e750229f-8f79-45a3-9f38-dc10db1cf9de\r\nError Number:4060,State:1,Class:11","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.1321,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.1151609Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.1154886Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":35.3672,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:05.1178126Z","@mt":"503","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.1229222Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.2114,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:05.1252894Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"be51baa6afccfaa9cb0afef6978d4fc9","@sp":"01e4086faa6c88f1","ElapsedMilliseconds":44.5704,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:05.1276864Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:05.1360582Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:08.1387694Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"3ecc319702ee842c539b57c2725c696e","@sp":"335d79733c8054e2","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000049","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:08.1446112Z","@mt":"{Method} {Path}","@tr":"3ecc319702ee842c539b57c2725c696e","@sp":"335d79733c8054e2","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000049","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:08.1465475Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"3ecc319702ee842c539b57c2725c696e","@sp":"335d79733c8054e2","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000049","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:08.1493656Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"3ecc319702ee842c539b57c2725c696e","@sp":"335d79733c8054e2","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000049","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:08.1531053Z","@mt":"200","@tr":"3ecc319702ee842c539b57c2725c696e","@sp":"335d79733c8054e2","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000049","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:08.1549618Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"3ecc319702ee842c539b57c2725c696e","@sp":"335d79733c8054e2","ElapsedMilliseconds":17.0124,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000049","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:15.1476714Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:15.1510777Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:15.1561944Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1590793Z","@mt":"{Method} {Path}","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1614144Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1678893Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:e750229f-8f79-45a3-9f38-dc10db1cf9de\r\nError Number:4060,State:1,Class:11","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.141,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1866585Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1869980Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":32.7701,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:15.1909964Z","@mt":"503","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1926146Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":44.9552,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:15.1958871Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"ee45043ecf6032b123f7e839947d9761","@sp":"c1ee7dc6071d4171","ElapsedMilliseconds":40.0982,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:15.1980089Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:15.2035884Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:18.1684466Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"56001271af7022bbc39413a260854322","@sp":"ee3ff62982504a9b","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000004B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:18.1753521Z","@mt":"{Method} {Path}","@tr":"56001271af7022bbc39413a260854322","@sp":"ee3ff62982504a9b","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000004B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:18.1778412Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"56001271af7022bbc39413a260854322","@sp":"ee3ff62982504a9b","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000004B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:18.1825275Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"56001271af7022bbc39413a260854322","@sp":"ee3ff62982504a9b","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000004B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:18.1844049Z","@mt":"200","@tr":"56001271af7022bbc39413a260854322","@sp":"ee3ff62982504a9b","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000004B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:18.1862078Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"56001271af7022bbc39413a260854322","@sp":"ee3ff62982504a9b","ElapsedMilliseconds":18.435,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000004B","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:25.2151704Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:25.2187501Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:25.2228451Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2271726Z","@mt":"{Method} {Path}","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2286625Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2335176Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:e750229f-8f79-45a3-9f38-dc10db1cf9de\r\nError Number:4060,State:1,Class:11","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":1.767,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2568435Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2571703Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":36.1857,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:25.2592626Z","@mt":"503","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2643069Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":49.2946,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:25.2660261Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"1379c15f67a98e5586b5a71a68fffa87","@sp":"ec96918d6834bbe1","ElapsedMilliseconds":43.6163,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000005","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:25.2681967Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:25.2752335Z","@mt":"Saved {count} entities to in-memory store.","count":3,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:28.1998559Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"5edd6b6c182dae772f57c89d103cfe7c","@sp":"6918c0512220b64c","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000004D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:28.2057017Z","@mt":"{Method} {Path}","@tr":"5edd6b6c182dae772f57c89d103cfe7c","@sp":"6918c0512220b64c","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000004D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:28.2086860Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"5edd6b6c182dae772f57c89d103cfe7c","@sp":"6918c0512220b64c","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000004D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:28.2115743Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"5edd6b6c182dae772f57c89d103cfe7c","@sp":"6918c0512220b64c","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000004D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:28.2153422Z","@mt":"200","@tr":"5edd6b6c182dae772f57c89d103cfe7c","@sp":"6918c0512220b64c","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000004D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:28.2169697Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"5edd6b6c182dae772f57c89d103cfe7c","@sp":"6918c0512220b64c","ElapsedMilliseconds":17.4795,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000004D","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:35.2866192Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:35.2907877Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:35.2949487Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3019224Z","@mt":"{Method} {Path}","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3038933Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3148174Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:e750229f-8f79-45a3-9f38-dc10db1cf9de\r\nError Number:4060,State:1,Class:11","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":8.5198,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3345488Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3348709Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":41.1474,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:35.3358760Z","@mt":"503","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3381651Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":51.5718,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:35.3402631Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"116577fc319febad3cccdba04eb3a46a","@sp":"38cbf476b5649818","ElapsedMilliseconds":45.9751,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000006","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:35.3426246Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:35.3530012Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:38.2340764Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"2f993e9197ab8ac0e4b91ac0cf0e1688","@sp":"11b1d47b46964aa3","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000004F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:38.2406144Z","@mt":"{Method} {Path}","@tr":"2f993e9197ab8ac0e4b91ac0cf0e1688","@sp":"11b1d47b46964aa3","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000004F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:38.2422974Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"2f993e9197ab8ac0e4b91ac0cf0e1688","@sp":"11b1d47b46964aa3","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000004F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:38.2446141Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"2f993e9197ab8ac0e4b91ac0cf0e1688","@sp":"11b1d47b46964aa3","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000004F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:38.2487974Z","@mt":"200","@tr":"2f993e9197ab8ac0e4b91ac0cf0e1688","@sp":"11b1d47b46964aa3","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000004F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:38.2508969Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"2f993e9197ab8ac0e4b91ac0cf0e1688","@sp":"11b1d47b46964aa3","ElapsedMilliseconds":17.1427,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000004F","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:45.3641465Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:45.3707707Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:45.3746172Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:45.3786032Z","@mt":"{Method} {Path}","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:45.3824970Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:48.2628078Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"b393f1259597f4cad412d022eb2b3b70","@sp":"3117eb3dc64f66a3","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000051","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:48.2695759Z","@mt":"{Method} {Path}","@tr":"b393f1259597f4cad412d022eb2b3b70","@sp":"3117eb3dc64f66a3","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000051","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:48.2712789Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"b393f1259597f4cad412d022eb2b3b70","@sp":"3117eb3dc64f66a3","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000051","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:48.2735558Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"b393f1259597f4cad412d022eb2b3b70","@sp":"3117eb3dc64f66a3","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000051","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:48.2783342Z","@mt":"200","@tr":"b393f1259597f4cad412d022eb2b3b70","@sp":"3117eb3dc64f66a3","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000051","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:48.2802250Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"b393f1259597f4cad412d022eb2b3b70","@sp":"3117eb3dc64f66a3","ElapsedMilliseconds":18.1478,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000051","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:55.4257640Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3e9d2fc0-d745-4506-b7c6-4ea94bdf46db\r\nError Number:4060,State:1,Class:11","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10040.722,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:55.4537575Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:55.4539952Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10081.0417,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:55.4551636Z","@mt":"503","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:55.4580607Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10093.9084,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:16:55.4627437Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"e08b902ab2b21d4e0b28c8fd36f25ef3","@sp":"9452c0ad94d8e943","ElapsedMilliseconds":10088.5549,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000007","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:16:55.4656856Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:55.4722416Z","@mt":"Saved {count} entities to in-memory store.","count":3,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:16:58.2963422Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d831935b7341c0b85c2b7f94a56323b3","@sp":"38c5de059a42e1a3","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000053","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:58.3043364Z","@mt":"{Method} {Path}","@tr":"d831935b7341c0b85c2b7f94a56323b3","@sp":"38c5de059a42e1a3","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000053","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:58.3077352Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d831935b7341c0b85c2b7f94a56323b3","@sp":"38c5de059a42e1a3","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000053","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:58.3112546Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d831935b7341c0b85c2b7f94a56323b3","@sp":"38c5de059a42e1a3","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000053","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:58.3133244Z","@mt":"200","@tr":"d831935b7341c0b85c2b7f94a56323b3","@sp":"38c5de059a42e1a3","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000053","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:16:58.3150676Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d831935b7341c0b85c2b7f94a56323b3","@sp":"38c5de059a42e1a3","ElapsedMilliseconds":19.3259,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000053","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:05.4752156Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:05.4788384Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:05.4819148Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.4924577Z","@mt":"{Method} {Path}","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.4949249Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.4977573Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0362,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.4993927Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3e9d2fc0-d745-4506-b7c6-4ea94bdf46db\r\nError Number:4060,State:1,Class:11","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.041,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.5203811Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.5206589Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":39.6589,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:05.5239747Z","@mt":"503","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.5258525Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.5566,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:05.5275170Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"797e672ef8387283c8c62ae7b3ea3ed4","@sp":"d866d8e5b1183946","ElapsedMilliseconds":45.9351,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000008","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:05.5300123Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:05.5411865Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:08.3305103Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"484f25c36a6aa3044a9ccde71931bf1e","@sp":"5dc48226988e113d","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000055","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:08.3380293Z","@mt":"{Method} {Path}","@tr":"484f25c36a6aa3044a9ccde71931bf1e","@sp":"5dc48226988e113d","Method":"GET","Path":"/healthchecks-api","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000055","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:08.3398116Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"484f25c36a6aa3044a9ccde71931bf1e","@sp":"5dc48226988e113d","EndpointName":"HealthChecks UI Api","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000055","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:08.3420308Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"484f25c36a6aa3044a9ccde71931bf1e","@sp":"5dc48226988e113d","EndpointName":"HealthChecks UI Api","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000055","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:08.3455310Z","@mt":"200","@tr":"484f25c36a6aa3044a9ccde71931bf1e","@sp":"5dc48226988e113d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000055","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:08.3483935Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"484f25c36a6aa3044a9ccde71931bf1e","@sp":"5dc48226988e113d","ElapsedMilliseconds":18.3585,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000055","RequestPath":"/healthchecks-api","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:11.1577184Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"212ca40cf8edeefdca8aaac833272e2c","@sp":"1a24724c91c3226a","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-webhooks","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000057","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:11.1642103Z","@mt":"{Method} {Path}","@tr":"212ca40cf8edeefdca8aaac833272e2c","@sp":"1a24724c91c3226a","Method":"GET","Path":"/healthchecks-webhooks","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000057","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:11.1667965Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"212ca40cf8edeefdca8aaac833272e2c","@sp":"1a24724c91c3226a","EndpointName":"HealthChecks UI Webhooks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000057","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:11.1722856Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"212ca40cf8edeefdca8aaac833272e2c","@sp":"1a24724c91c3226a","EndpointName":"HealthChecks UI Webhooks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000057","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:11.1782175Z","@mt":"200","@tr":"212ca40cf8edeefdca8aaac833272e2c","@sp":"1a24724c91c3226a","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000057","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:11.1797248Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"212ca40cf8edeefdca8aaac833272e2c","@sp":"1a24724c91c3226a","ElapsedMilliseconds":22.561,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-webhooks","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000057","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:17:15.5457130Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:15.5499029Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:15.5571029Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.5601030Z","@mt":"{Method} {Path}","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.5637741Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.5664053Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0063,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.5680855Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3e9d2fc0-d745-4506-b7c6-4ea94bdf46db\r\nError Number:4060,State:1,Class:11","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.0657,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.6013859Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.6017216Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":46.7595,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:15.6030277Z","@mt":"503","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.6061361Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":60.4935,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:15.6091752Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"f654d1ac342baa8d5ed0875770ec17f5","@sp":"076d7c85b0f38bcd","ElapsedMilliseconds":52.6264,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:00000009","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:15.6119109Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:15.6192318Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:25.6239528Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:25.6275317Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:25.6309228Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6357014Z","@mt":"{Method} {Path}","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6381697Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6433853Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.1463,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6448845Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3e9d2fc0-d745-4506-b7c6-4ea94bdf46db\r\nError Number:4060,State:1,Class:11","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.048,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6673016Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6675292Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":37.7049,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:25.6689878Z","@mt":"503","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6740565Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.1036,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:25.6763447Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"00ab4798c25ad46856e52cda6f37e1a9","@sp":"2f0e8acbac80c91d","ElapsedMilliseconds":45.8753,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC9:0000000A","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVC9"}
{"@t":"2024-02-29T16:17:25.6784421Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:25.6910071Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:35.6983426Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:35.7039523Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:35.7205354Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7252126Z","@mt":"{Method} {Path}","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7267430Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7296085Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.006,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7312755Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3e9d2fc0-d745-4506-b7c6-4ea94bdf46db\r\nError Number:4060,State:1,Class:11","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":1.8832,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7527600Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7529829Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":46.7779,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:35.7545578Z","@mt":"503","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7569898Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":58.6718,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:35.7586573Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"1eb2504f0ecb0e007322d2ea315e8da1","@sp":"9318f4e598a35bc3","ElapsedMilliseconds":38.1927,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000001","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:35.7635840Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:35.7725230Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:45.7855846Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:45.7908674Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:45.7946796Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.7996342Z","@mt":"{Method} {Path}","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8028661Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8049288Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0066,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8067227Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\r\n   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:3e9d2fc0-d745-4506-b7c6-4ea94bdf46db\r\nError Number:4060,State:1,Class:11","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":2.2593,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8284247Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8286980Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":35.6685,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:45.8304621Z","@mt":"503","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8361676Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":50.6035,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:45.8382954Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"c01e5db18a8751260ecef15d44b26aaf","@sp":"700028ff95cad365","ElapsedMilliseconds":44.0352,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000002","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:45.8403977Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:45.8458836Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:17:55.8478182Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:55.8519464Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:17:55.8579072Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:55.8613151Z","@mt":"{Method} {Path}","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:55.8628745Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:17:55.8670981Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","HealthCheckName":"Random","HealthStatus":"Unhealthy","ElapsedMilliseconds":0.0075,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:05.9015573Z","@mt":"Health check {HealthCheckName} with status {HealthStatus} completed after {ElapsedMilliseconds}ms with message '{HealthCheckDescription}'","@l":"Error","@x":"Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database \"sakilaXXX\" requested by the login. The login failed.\r\nLogin failed for user 'DESKTOP-RCJ2PV1\\marci'.\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\r\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location ---\r\n   at HealthChecks.SqlServer.SqlServerHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /_/src/HealthChecks.SqlServer/SqlServerHealthCheck.cs:line 28\r\nClientConnectionId:dee573e6-a3af-43df-8d7b-54b7f367d93d\r\nError Number:4060,State:1,Class:11","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","HealthCheckName":"SakilaDb-check","HealthStatus":"Unhealthy","ElapsedMilliseconds":10034.5408,"HealthCheckDescription":null,"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:05.9307675Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","EndpointName":"Health checks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:05.9310244Z","@mt":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10074.2063,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:18:05.9329187Z","@mt":"503","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:05.9346139Z","@mt":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","ElapsedMilliseconds":10086.8143,"StatusCode":503,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","HttpMethod":"GET","Uri":"https://localhost:7218/hc","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:18:05.9394408Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"682d62f3f5a68aab9999cdb683b15ce7","@sp":"630a9eed511c88e1","ElapsedMilliseconds":10081.9137,"StatusCode":503,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000003","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:05.9424322Z","@mt":"Notification is sent on same window time.","SourceContext":"HealthChecks.UI.Core.Notifications.WebHookFailureNotifier","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:18:05.9504110Z","@mt":"Saved {count} entities to in-memory store.","count":4,"EventId":{"Id":30100,"Name":"Microsoft.EntityFrameworkCore.Update.ChangesSaved"},"SourceContext":"Microsoft.EntityFrameworkCore.Update","Scope":["HealthReportCollector is collecting health checks results."]}
{"@t":"2024-02-29T16:18:15.9585908Z","@mt":"Start processing HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.LogicalHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:18:15.9643945Z","@mt":"Sending HTTP request {HttpMethod} {Uri}","HttpMethod":"GET","Uri":"https://localhost:7218/hc","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.health-checks.ClientHandler","Scope":["HealthReportCollector is collecting health checks results.","HTTP GET https://localhost:7218/hc"]}
{"@t":"2024-02-29T16:18:15.9695870Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"7b53c567e1c95c21083848ceb427a90c","@sp":"691c2f1c078d5cdb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/hc","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVCA:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:15.9751379Z","@mt":"{Method} {Path}","@tr":"7b53c567e1c95c21083848ceb427a90c","@sp":"691c2f1c078d5cdb","Method":"GET","Path":"/hc","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVCA:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:15.9777975Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"7b53c567e1c95c21083848ceb427a90c","@sp":"691c2f1c078d5cdb","EndpointName":"Health checks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVCA:00000004","RequestPath":"/hc","ConnectionId":"0HN1P85G4OVCA"}
{"@t":"2024-02-29T16:18:19.9069232Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"86d35c9a9d1b1498c3f53d864bb6c089","@sp":"2a06751ae0f57ab1","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api/ui-settings","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000059","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9071201Z","@mt":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","@tr":"d8f0069a7c14072c2fc101226a6cb9a0","@sp":"55654ceba655f2f9","Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-webhooks","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000005B","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9116229Z","@mt":"{Method} {Path}","@tr":"86d35c9a9d1b1498c3f53d864bb6c089","@sp":"2a06751ae0f57ab1","Method":"GET","Path":"/healthchecks-api/ui-settings","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000059","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9215288Z","@mt":"{Method} {Path}","@tr":"d8f0069a7c14072c2fc101226a6cb9a0","@sp":"55654ceba655f2f9","Method":"GET","Path":"/healthchecks-webhooks","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000005B","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9382420Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"86d35c9a9d1b1498c3f53d864bb6c089","@sp":"2a06751ae0f57ab1","EndpointName":"/healthchecks-api/ui-settings","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000059","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9483158Z","@mt":"Executing endpoint '{EndpointName}'","@tr":"d8f0069a7c14072c2fc101226a6cb9a0","@sp":"55654ceba655f2f9","EndpointName":"HealthChecks UI Webhooks","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000005B","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9522698Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"86d35c9a9d1b1498c3f53d864bb6c089","@sp":"2a06751ae0f57ab1","EndpointName":"/healthchecks-api/ui-settings","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:00000059","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9610985Z","@mt":"Executed endpoint '{EndpointName}'","@tr":"d8f0069a7c14072c2fc101226a6cb9a0","@sp":"55654ceba655f2f9","EndpointName":"HealthChecks UI Webhooks","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN1P85G4OVC8:0000005B","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9706275Z","@mt":"200","@tr":"86d35c9a9d1b1498c3f53d864bb6c089","@sp":"2a06751ae0f57ab1","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:00000059","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9793745Z","@mt":"200","@tr":"d8f0069a7c14072c2fc101226a6cb9a0","@sp":"55654ceba655f2f9","SourceContext":"Sakila.Api.Middlewares.LoggerMiddleware","RequestId":"0HN1P85G4OVC8:0000005B","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:19.9979832Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"86d35c9a9d1b1498c3f53d864bb6c089","@sp":"2a06751ae0f57ab1","ElapsedMilliseconds":90.457,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-api/ui-settings","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:00000059","RequestPath":"/healthchecks-api/ui-settings","ConnectionId":"0HN1P85G4OVC8"}
{"@t":"2024-02-29T16:18:20.0045879Z","@mt":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","@tr":"d8f0069a7c14072c2fc101226a6cb9a0","@sp":"55654ceba655f2f9","ElapsedMilliseconds":97.4446,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7218","PathBase":"","Path":"/healthchecks-webhooks","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN1P85G4OVC8:0000005B","RequestPath":"/healthchecks-webhooks","ConnectionId":"0HN1P85G4OVC8"}
